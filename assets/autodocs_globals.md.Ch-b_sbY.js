import{_ as a,c as e,o as t,a3 as o}from"./chunks/framework.DVC_29Cd.js";const f=JSON.parse('{"title":"onion-interceptor","description":"","frontmatter":{},"headers":[],"relativePath":"autodocs/globals.md","filePath":"autodocs/globals.md"}'),r={name:"autodocs/globals.md"},l=o('<p><a href="./README.html"><strong>onion-interceptor</strong></a> • <strong>Docs</strong></p><hr><h1 id="onion-interceptor" tabindex="-1">onion-interceptor <a class="header-anchor" href="#onion-interceptor" aria-label="Permalink to &quot;onion-interceptor&quot;">​</a></h1><h2 id="类" tabindex="-1">类 <a class="header-anchor" href="#类" aria-label="Permalink to &quot;类&quot;">​</a></h2><ul><li><a href="./classes/OnionInterceptor.html">OnionInterceptor</a></li></ul><h2 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h2><ul><li><a href="./interfaces/MiddlewareKlassConstructor.html">MiddlewareKlassConstructor</a></li><li><a href="./interfaces/Opeartion.html">Opeartion</a></li></ul><h2 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-label="Permalink to &quot;类型别名&quot;">​</a></h2><ul><li><a href="./type-aliases/Middleware.html">Middleware</a></li><li><a href="./type-aliases/Next.html">Next</a></li></ul><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><ul><li><a href="./functions/operate.html">operate</a></li></ul>',11),i=[l];function n(s,c,h,d,u,p){return t(),e("div",null,i)}const m=a(r,[["render",n]]);export{f as __pageData,m as default};
