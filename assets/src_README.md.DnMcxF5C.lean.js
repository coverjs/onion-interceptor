import{_ as o,c as n,o as r,j as e,a as t}from"./chunks/framework.DVC_29Cd.js";const D=JSON.parse('{"title":"onion-interceptor","description":"","frontmatter":{},"headers":[],"relativePath":"src/README.md","filePath":"src/README.md"}'),a={name:"src/README.md"},s=e("p",null,[e("strong",null,"onion-interceptor"),t(" • "),e("a",{href:"./globals.html"},[e("strong",null,"Docs")])],-1),c=e("hr",null,null,-1),i=e("h1",{id:"onion-interceptor",tabindex:"-1"},[t("onion-interceptor "),e("a",{class:"header-anchor",href:"#onion-interceptor","aria-label":'Permalink to "onion-interceptor"'},"​")],-1),l=e("p",null,"洋葱拦截器 灵感来自于 Koa 洋葱模型以及 Angular Interceptor 的请求拦截器，可以以 Koa 中间件的形式写网络请求的拦截器（axios 、fetch 以及各种请求的方式）。",-1),_=[s,c,i,l];function d(p,h,u,f,m,E){return r(),n("div",null,_)}const g=o(a,[["render",d]]);export{D as __pageData,g as default};
