import{_ as e,c as t,o as a,a3 as o}from"./chunks/framework.DVC_29Cd.js";const _=JSON.parse('{"title":"接口: Next()<Res>","description":"","frontmatter":{},"headers":[],"relativePath":"src/interfaces/Next.md","filePath":"src/interfaces/Next.md"}'),r={name:"src/interfaces/Next.md"},d=o('<p><a href="./../README.html"><strong>onion-interceptor</strong></a> • <strong>Docs</strong></p><hr><h1 id="接口-next-res" tabindex="-1">接口: Next()&lt;Res&gt; <a class="header-anchor" href="#接口-next-res" aria-label="Permalink to &quot;接口: Next()\\&lt;Res\\&gt;&quot;">​</a></h1><p>Next 类型定义了 next 函数的签名。 next 函数用于调用中间件链的下一个中间件或执行核心逻辑。</p><h2 id="类型参数" tabindex="-1">类型参数 <a class="header-anchor" href="#类型参数" aria-label="Permalink to &quot;类型参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类型参数</th><th style="text-align:left;">Value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Res</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><blockquote><p><strong>Next</strong>(...<code>args</code>): <code>Promise</code>&lt;<code>void</code> | <code>Res</code>&gt;</p></blockquote><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;">...<code>args</code></td><td style="text-align:left;"><a href="./Opeartion.html"><code>Opeartion</code></a>[]</td></tr></tbody></table><h2 id="返回值类型" tabindex="-1">返回值类型 <a class="header-anchor" href="#返回值类型" aria-label="Permalink to &quot;返回值类型&quot;">​</a></h2><p><code>Promise</code>&lt;<code>void</code> | <code>Res</code>&gt;</p><h2 id="查看源码" tabindex="-1">查看源码 <a class="header-anchor" href="#查看源码" aria-label="Permalink to &quot;查看源码&quot;">​</a></h2><p><a href="https://github.com/coverjs/onion-interceptor/blob/d236aa63ca3a9e0fbece66c5ed18f82df60eea1f/packages/core/src/types.ts#L166" target="_blank" rel="noreferrer">types.ts:166</a></p>',13),s=[d];function c(l,n,i,h,f,x){return a(),t("div",null,s)}const b=e(r,[["render",c]]);export{_ as __pageData,b as default};
