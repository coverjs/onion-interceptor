import{_ as e,c as t,o as a,a3 as r}from"./chunks/framework.DVC_29Cd.js";const b=JSON.parse('{"title":"函数: operate()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/operate.md","filePath":"src/functions/operate.md"}'),o={name:"src/functions/operate.md"},n=r('<p><a href="./../README.html"><strong>onion-interceptor</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-operate" tabindex="-1">函数: operate() <a class="header-anchor" href="#函数-operate" aria-label="Permalink to &quot;函数: operate()&quot;">​</a></h1><blockquote><p><strong>operate</strong>(<code>fn</code>): <a href="./../interfaces/Opeartion.html"><code>Opeartion</code></a></p></blockquote><p>Generate Operator</p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><a href="./../type-aliases/Middleware.html"><code>Middleware</code></a></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="返回值类型" tabindex="-1">返回值类型 <a class="header-anchor" href="#返回值类型" aria-label="Permalink to &quot;返回值类型&quot;">​</a></h2><p><a href="./../interfaces/Opeartion.html"><code>Opeartion</code></a></p><h2 id="查看源码" tabindex="-1">查看源码 <a class="header-anchor" href="#查看源码" aria-label="Permalink to &quot;查看源码&quot;">​</a></h2><p><a href="https://github.com/coverjs/onion-interceptor/blob/4cc2c488931cb6f687c063d370f3262121050ff8/packages/core/src/index.ts#L55" target="_blank" rel="noreferrer">index.ts:55</a></p>',11),c=[n];function s(l,i,d,h,p,f){return a(),t("div",null,c)}const u=e(o,[["render",s]]);export{b as __pageData,u as default};
