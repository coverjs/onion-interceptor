import{_ as e,c as t,o as a,a3 as r}from"./chunks/framework.DVC_29Cd.js";const _=JSON.parse('{"title":"接口: MiddlewareKlass<Ctx>","description":"","frontmatter":{},"headers":[],"relativePath":"src/interfaces/MiddlewareKlass.md","filePath":"src/interfaces/MiddlewareKlass.md"}'),l={name:"src/interfaces/MiddlewareKlass.md"},o=r('<p><a href="./../README.html"><strong>onion-interceptor</strong></a> • <strong>Docs</strong></p><hr><h1 id="接口-middlewareklass-ctx" tabindex="-1">接口: MiddlewareKlass&lt;Ctx&gt; <a class="header-anchor" href="#接口-middlewareklass-ctx" aria-label="Permalink to &quot;接口: MiddlewareKlass\\&lt;Ctx\\&gt;&quot;">​</a></h1><p>MiddlewareKlass 接口定义了一个中间件类的结构。 它包含一个 intercept 方法，该方法符合 Middleware 函数签名。</p><h2 id="template" tabindex="-1">Template <a class="header-anchor" href="#template" aria-label="Permalink to &quot;Template&quot;">​</a></h2><p>上下文对象的类型。</p><h2 id="类型参数" tabindex="-1">类型参数 <a class="header-anchor" href="#类型参数" aria-label="Permalink to &quot;类型参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类型参数</th><th style="text-align:left;">Value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Ctx</code></td><td style="text-align:left;"><a href="./../type-aliases/Context.html"><code>Context</code></a></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="intercept" tabindex="-1">intercept <a class="header-anchor" href="#intercept" aria-label="Permalink to &quot;intercept&quot;">​</a></h3><blockquote><p><strong>intercept</strong>: <a href="./Middleware.html"><code>Middleware</code></a>&lt;<code>Ctx</code>, <code>any</code>&gt;</p></blockquote><h4 id="查看源码" tabindex="-1">查看源码 <a class="header-anchor" href="#查看源码" aria-label="Permalink to &quot;查看源码&quot;">​</a></h4><p><a href="https://github.com/coverjs/onion-interceptor/blob/482006a5b14f2e170b14bf7df69cb7f1dffb81fb/packages/core/src/types.ts#L191" target="_blank" rel="noreferrer">types.ts:191</a></p>',13),s=[o];function d(i,n,c,h,p,f){return a(),t("div",null,s)}const m=e(l,[["render",d]]);export{_ as __pageData,m as default};
